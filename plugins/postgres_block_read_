#!/usr/bin/env python

from munin.postgres import MuninPostgresPlugin

class MuninPostgresBlockReadPlugin(MuninPostgresPlugin):
    dbname_in_args = True
    graph_args = "--base 1000"
    graph_vlabel = "Blocks read per ${graph_period}"
    graph_info = "Shows number of blocks read from disk and from memory"
    fields = (
        ('from_disk', dict(
            label = "Read from disk",
            info = "Read from disk",
            type = "DERIVE",
            min = "0",
            draw = "AREA",
        )),
        ('from_memory', dict(
            label = "Cached in memory",
            info = "Cached in memory",
            type = "DERIVE",
            min = "0",
            draw = "STACK",
        )),
    )

    @property
    def graph_title(self):
        return "Postgres data reads from %s" % self.dbname

    def execute(self):
        c = self.cursor()
        query = (
            "SELECT (SUM (heap_blks_read) + SUM (idx_blks_read) + "
            "	 SUM (toast_blks_read) + SUM (tidx_blks_read)) AS disk, "
            "	(SUM (heap_blks_hit) + SUM (idx_blks_hit) + "
            "	 SUM (toast_blks_hit) + SUM (tidx_blks_hit)) AS mem "
            "FROM pg_statio_user_tables")
        c.execute(query)
        for row in c.fetchall():
        	print "from_disk.value %s" % row[0]
        	print "from_memory.value %s" % row[1]

if __name__ == "__main__":
    MuninPostgresBlockReadPlugin().run()
