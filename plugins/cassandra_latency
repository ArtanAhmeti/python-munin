#!/usr/bin/env python

import os
from munin.cassandra import MuninCassandraPlugin

class CassandraLatencyPlugin(MuninCassandraPlugin):
    title = "read/write latency"
    args = "--base 1000 -l 0"
    vlabel = "ms"

    @property
    def fields(self):
        fs = []
        cfstats = self.cfstats()
        for kf, kfstats in cfstats.items():
            for cf, cfstats in kfstats['cf'].items():
                name = "%s_%s_read" % (kf, cf)
                label = "%s.%s read latency" % (kf, cf)
                fs.append((name, dict(
                        label = label,
                        info = label,
                        type = "GAUGE",
                        min = "0",
                    )))
                name = "%s_%s_write" % (kf, cf)
                label = "%s.%s write latency" % (kf, cf)
                fs.append((name, dict(
                        label = label,
                        info = label,
                        type = "GAUGE",
                        min = "0",
                    )))
        return fs

    def execute(self):
        cfstats = self.cfstats()
        for kf, kfstats in cfstats.items():
            for cf, cfstats in kfstats['cf'].items():
                name = "%s_%s" % (kf, cf)
                print "%s_read.value" % name, cfstats['Read Latency'].split(' ')[0]
                print "%s_write.value" % name, cfstats['Write Latency'].split(' ')[0]

if __name__ == "__main__":
    CassandraLatencyPlugin().run()
