#!/usr/bin/env python

import os
from munin.cassandra import MuninCassandraPlugin

class CassandraKeyCacheRatioPlugin(MuninCassandraPlugin):
    title = "key cache hit ratio"
    args = "--base 1000 -l 0"
    vlabel = "ratio"
    scaled = False

    @property
    def fields(self):
        fs = []
        cfstats = self.cfstats()
        for kf, kfstats in cfstats.items():
            for cf, cfstats in kfstats['cf'].items():
                name = "%s_%s" % (kf, cf)
                label = "%s.%s" % (kf, cf)
                fs.append((name, dict(
                        label = label,
                        info = label,
                        type = "GAUGE",
                        min = "0",
                    )))
        return fs

    def execute(self):
        cfstats = self.cfstats()
        for kf, kfstats in cfstats.items():
            for cf, cfstats in kfstats['cf'].items():
                if cfstats['Key cache hit rate'] != 'NaN':
                    print "%s_%s.value" % (kf, cf), cfstats['Key cache hit rate']

if __name__ == "__main__":
    CassandraKeyCacheRatioPlugin().run()
